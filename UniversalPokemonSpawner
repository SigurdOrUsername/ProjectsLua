--Wooo open source

loadstring(game:HttpGet("https://pastebin.com/raw/cwDSpepQ", true))()

local Player = game:GetService("Players").LocalPlayer

local Window = library:AddWindow("Lol")
local Spawning = Window:AddTab("Spawn Pokemon")

local function GetSpawningFunction()
    for FuncName, Value in next, getrenv()._G do
        if type(Value) == "function" then
            local FuncConstants = getconstants(Value)
            if table.find(FuncConstants, "getrenv") and table.find(FuncConstants, "InvokeServer") then
                return Value
            end
        end
    end
end

local PokemonName = "Pidgey"
local Location = Player.PokemonParty
local Lvl = 1

Spawning:AddTextBox("Pokemon Name", function(Value)
    PokemonName = Value
end)
Spawning:AddTextBox("Lvl", function(Value)
    if tonumber(Value) then
        Lvl = tonumber(Value)
    end
end)
local LocationPicker = Spawning:AddDropdown("Location", function(Value)
    Location = Player.PC:FindFirstChild(Value) or Player.PokemonParty
end)

LocationPicker:Add("Pokemon Party")
for Index, BoxName in next, Player.PC:GetChildren() do
    LocationPicker:Add(BoxName.Name)
end

local SpawningFunction = GetSpawningFunction()
Spawning:AddButton("Spawn!", function()
    local OldFenv = getrenv().getfenv
    
    local Fenv = getfenv()
    getrenv().getfenv = function()
        local Mt = getrawmetatable(Fenv)
        Mt.__index.getrenv = nil
        
        return Fenv
    end

    if getrenv()._G.nwiqkndqwndqlwkndlkqoc then --I know this is easily changable, but oh well
        local Math = require(game:GetService("ReplicatedStorage").Functions.Math)
        
        local Pokemon = SpawningFunction(PokemonName, nil, Lvl, true)
        Math.ParentChange(nil, Pokemon, Location)
    else
        SpawningFunction(PokemonName, Location, Lvl, true)
    end
    getrenv().getfenv = OldFenv
end)
