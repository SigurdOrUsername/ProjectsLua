local h=game.Players.LocalPlayer local M=game.ReplicatedStorage local E={OldRenv=getrenv,AllImportantModuleScripts={};InfoTable={};NewMove,SpawningFunction,BypassEnvCheck=function(h,...)local M=getrawmetatable(getfenv())local E=M.__index.getrenv local J=pcall local D=table.unpack local K={...}M.__index.getrenv=nil J(function()h(D(K))end)M.__index.getrenv=E end};(loadstring(game:HttpGet("https://raw.githubusercontent.com/SigurdOrUsername/ProjectsLua/main/UiLibModified",true)))()local J=library:AddWindow("Lol")local D=J:AddTab("Inventory")local K=J:AddTab("Pokemon")local k=J:AddTab("Roulette")local N=J:AddTab("In Battle")local l=J:AddTab("List of pokemon")local P=J:AddTab("Change Log")local f={ItemToAdd="";ItemLocationDropdown;NumItemToAdd=1;ItemLocationObject}local W=D:AddFolder("Add items to your inventory")W:AddTextBox("Item to add: ",function(h)f.ItemToAdd=h end,{clear=false})W:AddTextBox("Amount of item to add: ",function(h)f.NumItemToAdd=tonumber(h)end,{clear=false})f.ItemLocationDropdown=W:AddDropdown("Where to add item: ",function(M)f.ItemLocationObject=h.Bag:FindFirstChild(M)end)W:AddButton("Add item",function()E.InfoTable.FuncAddItem(nil,f.ItemToAdd,f.ItemLocationObject,f.NumItemToAdd)end)for h,M in next,h.Bag:GetChildren()do f.ItemLocationDropdown:Add(M.Name)end local F={NumBP=1}local L=D:AddFolder("Spawn currency")L:AddLabel("You cannot spawn more than 300BP at once in most PP games!")L:AddTextBox("Amount of BP: ",function(h)if tonumber(h)then F.NumBP=tonumber(h)end end,{clear=false})L:AddButton("Spawn BP!",function()E.InfoTable.BPChange(nil,F.NumBP)end)local p={PokemonToModify;PokemonMove;PokemonToModifyDropdown,PokemonToModifyDropdownInfo={},ReplaceMove,MovesToReplaceDropdown,MovesToReplaceDropdownInfo={}}local c=K:AddFolder("Pokemon Moves")local function z(h,M,E)for M,E in next,h do h[M]:Remove()end for E,J in next,E:GetChildren()do if J then h[#h+1]=M:Add(J.Name)end end end p.PokemonToModifyDropdown=c:AddDropdown("Pokemon party",function(M)p.PokemonToModify=h.PokemonParty:FindFirstChild(M)z(p.MovesToReplaceDropdownInfo,p.MovesToReplaceDropdown,p.PokemonToModify.Moves)end)c:AddTextBox("Name of move to add: ",function(h)p.PokemonMove=h z(p.MovesToReplaceDropdownInfo,p.MovesToReplaceDropdown,p.PokemonToModify.Moves)end,{clear=false})c:AddButton("Add move",function()E.NewMove(nil,p.PokemonToModify,p.PokemonMove)z(p.MovesToReplaceDropdownInfo,p.MovesToReplaceDropdown,p.PokemonToModify.Moves)end)z(p.PokemonToModifyDropdownInfo,p.PokemonToModifyDropdown,h.PokemonParty)h.PokemonParty.ChildAdded:Connect(function(M)z(p.PokemonToModifyDropdownInfo,p.PokemonToModifyDropdown,h.PokemonParty)end)h.PokemonParty.ChildRemoved:Connect(function(M)z(p.PokemonToModifyDropdownInfo,p.PokemonToModifyDropdown,h.PokemonParty)end)c:AddLabel("")c:AddLabel("If you have 4 moves, you can replace moves here:")p.MovesToReplaceDropdown=c:AddDropdown("Moves to replace: ",function(h)p.ReplaceMove=p.PokemonToModify.Moves:FindFirstChild(h)end)c:AddTextBox("Name of move to replace: ",function(h)p.PokemonMove=h end,{clear=false})c:AddButton("Replace move",function()E.InfoTable.MoveLearn(nil,p.PokemonToModify,p.ReplaceMove,p.PokemonMove)z(p.MovesToReplaceDropdownInfo,p.MovesToReplaceDropdown,p.PokemonToModify.Moves)end)local G={PokemonName="Pidgey",Location=h.PokemonParty;LocationPicker;Lvl=1}local C={SpawnUntilShiny=false;SpawnUntilAura=false;DoRepeatSpawn=false,CurrentLoggingFolder}local function R(h,M,E)if M and E then return h.Shiny.Value and h:FindFirstChild("Aura")end if M then return h.Shiny.Value end if E then return h:FindFirstChild("Aura")end return true end local function s()if(E.OldRenv())._G.nwiqkndqwndqlwkndlkqoc then E.BypassEnvCheck(E.SpawningFunction,G.PokemonName,h,G.Lvl,true)local M=h:FindFirstChild(G.PokemonName)if M then if M and R(M,C.SpawnUntilShiny,C.SpawnUntilAura)then C.CurrentLoggingFolder:AddLabel("Got: "..M.Name)E.BypassEnvCheck(E.InfoTable.ParentChange,nil,M,G.Location)if h.PC:FindFirstChild(G.Location.Name)then E.ChangePos(nil,M,#G.Location:GetChildren())else E.InfoTable.SwapParty(nil,M,#h.PokemonParty:GetChildren())end else warn("Destroyed!")M:Destroy()end end else E.BypassEnvCheck(E.SpawningFunction,G.PokemonName,G.Location,G.Lvl,true)local M=G.Location:FindFirstChild(G.PokemonName)if M then if R(M,C.SpawnUntilShiny,C.SpawnUntilAura)then if h.PC:FindFirstChild(G.Location.Name)then E.ChangePos(nil,M,#G.Location:GetChildren())end else warn("Destroyed!")M:Destroy()end end end end local B=K:AddFolder("Pokemon spawner")B:AddLabel("PS: Works for every exploit now!")B:AddTextBox("Pokemon name",function(h)G.PokemonName=h end,{clear=false})B:AddTextBox("Lvl",function(h)if tonumber(h)then G.Lvl=tonumber(h)end end,{clear=false})G.LocationPicker=B:AddDropdown("Location",function(M)G.Location=h.PC:FindFirstChild(M)or h.PokemonParty end)G.LocationPicker:Add("Pokemon Party")for h,M in next,h.PC:GetChildren()do G.LocationPicker:Add(M.Name)end B:AddButton("Spawn!",function()s()end)B:AddLabel("")B:AddLabel("Repeatedly spawn pokemon:")B:AddSwitch("Spawn until shiny",function(h)C.SpawnUntilShiny=h end)B:AddSwitch("Spawn until aura",function(h)C.SpawnUntilAura=h end)B:AddSwitch("Repeatedly spawn pokemon!",function(h)C.DoRepeatSpawn=h end);(coroutine.wrap(function()while task.wait()do if C.DoRepeatSpawn then s()warn("Spawned!")end end end))()C.CurrentLoggingFolder=B:AddFolder("Logging:")local Z={PokemonToModify;PokemonToModifyDropdown,PokemonToModifyDropdownInfo={}}local U=K:AddFolder("Modify skins")U:AddLabel("This only works for Project Polaro! (for now)")Z.PokemonToModifyDropdown=U:AddDropdown("Pokemon party",function(M)Z.PokemonToModify=h.PokemonParty:FindFirstChild(M)end)z(Z.PokemonToModifyDropdownInfo,Z.PokemonToModifyDropdown,h.PokemonParty)h.PokemonParty.ChildAdded:Connect(function(M)z(Z.PokemonToModifyDropdownInfo,Z.PokemonToModifyDropdown,h.PokemonParty)end)h.PokemonParty.ChildRemoved:Connect(function(M)z(Z.PokemonToModifyDropdownInfo,Z.PokemonToModifyDropdown,h.PokemonParty)end)U:AddButton("Modify skin!",function()E.InfoTable.FuncAddItem(nil,"Dark Skinifier",h.Bag.Evolution,1)E.InfoTable.Skinify(nil,Z.PokemonToModify,nil,true)end)local n={DontPayForRoulettes=false}local w w=hookmetamethod(game,"__namecall",function(h,...)if n.DontPayForRoulettes then if tostring(h)=="MarketplaceService"and(getcallingscript()and(tostring(getcallingscript())):find("Roulettes"))then return end end return w(h,...)end)local d=k:AddFolder("Roulette tampering")d:AddLabel("This only works for Ultima! (for now)")d:AddSwitch("Disable needing to pay for roulettes",function(h)n.DontPayForRoulettes=h end)if not(getrenv())._G.nwiqkndqwndqlwkndlkqoc then local function M(h,M)h.MouseButton1Down:Connect(function()local h=getsenv(M)h.scroll()h.selected=true end)end M(h.PlayerGui.Main.ReskinRoulette.Bottom.Roll,h.PlayerGui["_G.ReskinRoulettes"])M(h.PlayerGui.Main.UltimateRoulette.Bottom.Roll,h.PlayerGui["_G.UltimateRoulettes"])M(h.PlayerGui.Main.UpgradedRoulette.Bottom.Roll,h.PlayerGui["_G.UpgradedRoulettes"])M(h.PlayerGui.Main.Roulette.Bottom.Roll,h.PlayerGui["_G.Roulettes"])end local X={}local I=N:AddFolder("Modify pokemon in battle")I:AddButton("Heal your pokemon fully",function(M)for h,M in next,h.PokemonParty:GetChildren()do M.CurrentHP.Value=M.Stats.HPStat.Value end end)I:AddButton("Kill all enemy pokemon",function(M)for h,M in next,h.OppPokemon:GetChildren()do M.CurrentHP.Value=0 end end)P:AddLabel("Latest changes:")P:AddLabel("")P:AddLabel("12. Oct 2022: Added in repeat spawning in \'Pokemon spawner\'")P:AddLabel("12. Oct 2022: Added in a list of pokemon")for h,M in next,M:GetDescendants()do if M.ClassName=="ModuleScript"then table.insert(E.AllImportantModuleScripts,M)end end local function y(h)for M,E in next,E.AllImportantModuleScripts do local J local D,K=pcall(function()J=require(E)end)if not K and type(J)=="table"then for M,E in next,J do if M==h then return J end end end end end local function x()for h,M in next,(getrenv())._G do if type(M)=="function"then local h=getconstants(M)if table.find(h,"getrenv")and table.find(h,"InvokeServer")then return M end end end end local function T()E.InfoTable=y("FuncAddItem")E.NewMove=(y("NewMove")).NewMove E.SpawningFunction=x()E.ChangePos=(y("Change")).Change end T()
