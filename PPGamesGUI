local k=game.Players.LocalPlayer local y=game.ReplicatedStorage local S={OldRenv=getrenv,AllImportantModuleScripts={},InfoTable={},NewMove,SpawningFunction,BypassEnvCheck=function(k,...)local y=getrawmetatable(getfenv())local S=y.__index.getrenv local v=pcall local G=table.unpack local Q={...}y.__index.getrenv=nil v(function()k(G(Q))end)y.__index.getrenv=S end};(loadstring(game:HttpGet("https://raw.githubusercontent.com/SigurdOrUsername/ProjectsLua/main/UiLibModified",true)))()local v=library:AddWindow("Lol")local G=v:AddTab("Inventory")local Q=v:AddTab("Pokemon")local M=v:AddTab("Roulette")local n=v:AddTab("In Battle")local L=v:AddTab("List of pokemon")local Y=v:AddTab("Change Log")local i={ItemToAdd="",ItemLocationDropdown,NumItemToAdd=1;ItemLocationObject}local c=G:AddFolder("Add items to your inventory")c:AddTextBox("Item to add: ",function(k)i.ItemToAdd=k end,{clear=false})c:AddTextBox("Amount of item to add: ",function(k)i.NumItemToAdd=tonumber(k)end,{clear=false})i.ItemLocationDropdown=c:AddDropdown("Where to add item: ",function(y)i.ItemLocationObject=k.Bag:FindFirstChild(y)end)c:AddButton("Add item",function()S.InfoTable.FuncAddItem(nil,i.ItemToAdd,i.ItemLocationObject,i.NumItemToAdd)end)for k,y in next,k.Bag:GetChildren()do i.ItemLocationDropdown:Add(y.Name)end local r={NumBP=1}local d=G:AddFolder("Spawn currency")d:AddLabel("You cannot spawn more than 300BP at once in most PP games!")d:AddTextBox("Amount of BP: ",function(k)if tonumber(k)then r.NumBP=tonumber(k)end end,{clear=false})d:AddButton("Spawn BP!",function()S.InfoTable.BPChange(nil,r.NumBP)end)local O={PokemonToModify,PokemonMove,PokemonToModifyDropdown,PokemonToModifyDropdownInfo={},ReplaceMove;MovesToReplaceDropdown;MovesToReplaceDropdownInfo={}}local E=Q:AddFolder("Pokemon Moves")local function x(k,y,S)for y,S in next,k do k[y]:Remove()end for S,v in next,S:GetChildren()do if v then k[#k+1]=y:Add(v.Name)end end end O.PokemonToModifyDropdown=E:AddDropdown("Pokemon party",function(y)O.PokemonToModify=k.PokemonParty:FindFirstChild(y)x(O.MovesToReplaceDropdownInfo,O.MovesToReplaceDropdown,O.PokemonToModify.Moves)end)E:AddTextBox("Name of move to add: ",function(k)O.PokemonMove=k x(O.MovesToReplaceDropdownInfo,O.MovesToReplaceDropdown,O.PokemonToModify.Moves)end,{clear=false})E:AddButton("Add move",function()S.NewMove(nil,O.PokemonToModify,O.PokemonMove)x(O.MovesToReplaceDropdownInfo,O.MovesToReplaceDropdown,O.PokemonToModify.Moves)end)x(O.PokemonToModifyDropdownInfo,O.PokemonToModifyDropdown,k.PokemonParty)k.PokemonParty.ChildAdded:Connect(function(y)x(O.PokemonToModifyDropdownInfo,O.PokemonToModifyDropdown,k.PokemonParty)end)k.PokemonParty.ChildRemoved:Connect(function(y)x(O.PokemonToModifyDropdownInfo,O.PokemonToModifyDropdown,k.PokemonParty)end)E:AddLabel("")E:AddLabel("If you have 4 moves, you can replace moves here:")O.MovesToReplaceDropdown=E:AddDropdown("Moves to replace: ",function(k)O.ReplaceMove=O.PokemonToModify.Moves:FindFirstChild(k)end)E:AddTextBox("Name of move to replace: ",function(k)O.PokemonMove=k end,{clear=false})E:AddButton("Replace move",function()S.InfoTable.MoveLearn(nil,O.PokemonToModify,O.ReplaceMove,O.PokemonMove)x(O.MovesToReplaceDropdownInfo,O.MovesToReplaceDropdown,O.PokemonToModify.Moves)end)local X={PokemonName="Pidgey",Location=k.PokemonParty,LocationPicker,Lvl=1}local H={SpawnUntilShiny=false,SpawnUntilAura=false,DoRepeatSpawn=false;CurrentLoggingFolder}local function b(k,y,S)if y and S then return k.Shiny.Value and k:FindFirstChild("Aura")end if y then return k.Shiny.Value end if S then warn(k:FindFirstChild("Aura"))return k:FindFirstChild("Aura")end return true end local function o()if(S.OldRenv())._G.nwiqkndqwndqlwkndlkqoc then S.BypassEnvCheck(S.SpawningFunction,X.PokemonName,k,X.Lvl,true)local y=k:FindFirstChild(X.PokemonName)if y then if y and b(y,H.SpawnUntilShiny,H.SpawnUntilAura)then H.CurrentLoggingFolder:AddLabel("Got: "..y.Name)S.BypassEnvCheck(S.InfoTable.ParentChange,nil,y,X.Location)if k.PC:FindFirstChild(X.Location.Name)then S.ChangePos(nil,y,#X.Location:GetChildren())else S.InfoTable.SwapParty(nil,y,#k.PokemonParty:GetChildren())end else warn("Destroyed!")y:Destroy()end end else S.BypassEnvCheck(S.SpawningFunction,X.PokemonName,X.Location,X.Lvl,true)local y=X.Location:FindFirstChild(X.PokemonName)if y then if b(y,H.SpawnUntilShiny,H.SpawnUntilAura)then if k.PC:FindFirstChild(X.Location.Name)then S.ChangePos(nil,y,#X.Location:GetChildren())end else warn("Destroyed!")y:Destroy()end end end end local V=Q:AddFolder("Pokemon spawner")V:AddLabel("PS: Works for every exploit now!")V:AddTextBox("Pokemon name",function(k)X.PokemonName=k end,{clear=false})V:AddTextBox("Lvl",function(k)if tonumber(k)then X.Lvl=tonumber(k)end end,{clear=false})X.LocationPicker=V:AddDropdown("Location",function(y)X.Location=k.PC:FindFirstChild(y)or k.PokemonParty end)X.LocationPicker:Add("Pokemon Party")for k,y in next,k.PC:GetChildren()do X.LocationPicker:Add(y.Name)end V:AddButton("Spawn!",function()o()end)V:AddLabel("")V:AddLabel("Repeatedly spawn pokemon:")V:AddSwitch("Spawn until shiny",function(k)H.SpawnUntilShiny=k end)V:AddSwitch("Spawn until aura",function(k)H.SpawnUntilAura=k end)V:AddSwitch("Repeatedly spawn pokemon!",function(k)H.DoRepeatSpawn=k end);(coroutine.wrap(function()while task.wait()do if H.DoRepeatSpawn then o()warn("Spawned!")end end end))()H.CurrentLoggingFolder=V:AddFolder("Logging:")local a={PokemonToModify;PokemonToModifyDropdown,PokemonToModifyDropdownInfo={}}local J=Q:AddFolder("Modify skins")J:AddLabel("This only works for Project Polaro! (for now)")a.PokemonToModifyDropdown=J:AddDropdown("Pokemon party",function(y)a.PokemonToModify=k.PokemonParty:FindFirstChild(y)end)x(a.PokemonToModifyDropdownInfo,a.PokemonToModifyDropdown,k.PokemonParty)k.PokemonParty.ChildAdded:Connect(function(y)x(a.PokemonToModifyDropdownInfo,a.PokemonToModifyDropdown,k.PokemonParty)end)k.PokemonParty.ChildRemoved:Connect(function(y)x(a.PokemonToModifyDropdownInfo,a.PokemonToModifyDropdown,k.PokemonParty)end)J:AddButton("Modify skin!",function()S.InfoTable.FuncAddItem(nil,"Dark Skinifier",k.Bag.Evolution,1)S.InfoTable.Skinify(nil,a.PokemonToModify,nil,true)end)local P={DontPayForRoulettes=false}local l l=hookmetamethod(game,"__namecall",function(k,...)if P.DontPayForRoulettes then if tostring(k)=="MarketplaceService"and(getcallingscript()and(tostring(getcallingscript())):find("Roulettes"))then return end end return l(k,...)end)local C=M:AddFolder("Roulette tampering")C:AddLabel("This only works for Ultima! (for now)")C:AddSwitch("Disable needing to pay for roulettes",function(k)P.DontPayForRoulettes=k end)if not(getrenv())._G.nwiqkndqwndqlwkndlkqoc then local function y(k,y)k.MouseButton1Down:Connect(function()local k=getsenv(y)k.scroll()k.selected=true end)end y(k.PlayerGui.Main.ReskinRoulette.Bottom.Roll,k.PlayerGui["_G.ReskinRoulettes"])y(k.PlayerGui.Main.UltimateRoulette.Bottom.Roll,k.PlayerGui["_G.UltimateRoulettes"])y(k.PlayerGui.Main.UpgradedRoulette.Bottom.Roll,k.PlayerGui["_G.UpgradedRoulettes"])y(k.PlayerGui.Main.Roulette.Bottom.Roll,k.PlayerGui["_G.Roulettes"])end local p={}local Z=n:AddFolder("Modify pokemon in battle")Z:AddButton("Heal your pokemon fully",function(y)for k,y in next,k.PokemonParty:GetChildren()do y.CurrentHP.Value=y.Stats.HPStat.Value end end)Z:AddButton("Kill all enemy pokemon",function(y)for k,y in next,k.OppPokemon:GetChildren()do y.CurrentHP.Value=0 end end)Y:AddLabel("Latest changes:")Y:AddLabel("")Y:AddLabel("12. Oct 2022: Added in repeat spawning in \'Pokemon spawner\'")Y:AddLabel("12. Oct 2022: Added in a list of pokemon")for k,y in next,y:GetDescendants()do if y.ClassName=="ModuleScript"then table.insert(S.AllImportantModuleScripts,y)end end local function W(k)for y,S in next,S.AllImportantModuleScripts do local v local G,Q=pcall(function()v=require(S)end)if not Q and type(v)=="table"then for y,S in next,v do if y==k then return v end end end end end local function z()for k,y in next,(getrenv())._G do if type(y)=="function"then local k=getconstants(y)if table.find(k,"getrenv")and table.find(k,"InvokeServer")then return y end end end end local function D()S.InfoTable=W("FuncAddItem")S.NewMove=(W("NewMove")).NewMove S.SpawningFunction=z()S.ChangePos=(W("Change")).Change end D()
